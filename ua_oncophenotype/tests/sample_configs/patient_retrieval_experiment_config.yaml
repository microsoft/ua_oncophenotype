# Experiment that runs patient-level retrieval (all notes) and classification on the
# sample patient dataset
defaults:
  # The 'defaults' section is a langchain construct that injects external configs.  Here
  # we inject specific 'chain' and 'dataset' components from config/experiment/chain and
  # config/experiment/dataset subdirectories.
  #
  # Select the dataset and add it as the 'dataset' key at the root level of the config.
  # This is added to config/resources via interpolation (${...} syntax) so it will be
  # instantiated once but can be referenced multiple locations in the config.  In this
  # case it's referenced by config/experiment/dataset and within the
  # patient_retrieval_chain
  - config/experiment/dataset@dataset: sample_patient_dataset
  - config/experiment/dataset@note_dataset: sample_note_dataset
  # Select the chain to run.  Without the '@' syntax used with dataset above, it is
  # injected at the location corresponding to the directory structure, here
  # config/experiment/chain.
  - config/experiment/chain: patient_retrieval_chain
  # Select the openai parameters (endpoint, key, etc.)
  - config/openai_config: sample_openai_config  # override this, just an example
  # holds info on the LLM class and deployment to use
  - llm: azure_openai
  # add file_tracer to root level, we'll add it to a list of callbacks in the config
  - config/experiment/callbacks@file_tracer: file_tracer
  - _self_

#
# the actual config
#
config:
  _target_: ua_oncophenotype.experiment_config.ExperimentConfig
  # Named resources that will be instantiated once and referenced elsewhere in the
  # config via the ComponentRegistry.  These will be instantiated in the order they are
  # listed here (to support dependencies between resources).
  resources: 
    - "dataset": ${dataset}
    - "note_dataset": ${note_dataset}
  output_dir: "experiment_output"
  experiment:
    _target_: ua_oncophenotype.experiment.Experiment
    dataset:
      # dataset is referenced through the 'resources'
      _target_: ua_oncophenotype.experiment_config.ComponentRegistry.get
      name: "dataset"
    chain:
      # The contents of /config/experiment/chain is specified in the defaults list,
      # everything here is just override some values from that config
      classifier:
        _target_: ua_oncophenotype.chains.ChatEvidenceChain.from_openai_llm
        llm_class: ${llm.class}
        llm_extra_args: ${llm.extra_args}
        question: "What is the patient's favorite color?"
        answer_mapping: ["red", "yellow", "blue", "purple", "white", "black", "Unsure"]
        examples: []
    data_runner:
      _target_: ua_oncophenotype.experiment.data_runners.DatasetRunner
      n_threads: 1
    evaluation:
      _target_: ua_oncophenotype.eval.ClassificationEvaluation
    callbacks:
      - ${file_tracer}
  pre_run_hooks:
    # this will delete the contents of the output directory before running the experiment
    - _target_: ua_oncophenotype.hooks.EnsureEmptyDirectoryHook
      dir: ${config.output_dir}
